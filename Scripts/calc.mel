proc float add(float $input[])
{
       float $curNum = 0;
      for ($i=0; $i<(size($input)); $i++)
      {
            $curNum += ($input[$i]);
            if ($i == size($input) -1)
            {
                  //print ($curNum + "\n" );
                  return $curNum;
            }
      }
}
proc float subtract(float $input[])
{
       float $curNum = $input[0];
      for ($i=1; $i<(size($input)); $i++)
      {
            $curNum -= ($input[$i]);
            if ($i == size($input) -1)
            {
                  //print ($curNum + "\n" );
                  return $curNum;
            }
      }
}
proc float multiple(float $input[])
{
       float $curNum = $input[0];
      for ($i=1; $i<(size($input)); $i++)
      {
            $curNum *= ($input[$i]);
            if ($i == size($input) -1)
            {
                  //print ($curNum + "\n" );
                  return $curNum;
            }
      }
}
proc float division(float $input[])
{
       float $curNum = $input[0];
      for ($i=1; $i<(size($input)); $i++)
      {
            $curNum /= ($input[$i]);
            if ($i == size($input) -1)
            {
                  //print ($curNum + "\n" );
                  return $curNum;
            }
      }
}
proc float powerOf(float $input[])
{
       float $curNum = $input[0];
      for ($i=1; $i<(size($input)); $i++)
      {
            $curNum = pow($curNum ,($input[$i]));
            if ($i == size($input) -1)
            {
                  //print ($curNum + "\n" );
                  return $curNum;
            }
      }
}
proc float mean(float $input[])
{
       float $curNum = 0;
      for ($i=0; $i<(size($input)); $i++)
      {
            $curNum += ($input[$i]);
            
            if ($i == size($input) -1)
            {
                  return ($curNum / size($input));
            } 
      }
}
proc float median(float $input[])
{
      int $medDet = 0;
      int $medDet2 = 0;
      if ((size($input) % 2) == 0)
      {
            
            int $medDet = (size($input) / 2);
            float $medDet2 = (($input[$medDet] + $input[$medDet + 1]) / 2);
            return ($medDet2);
      }
      else
      {
            print("odd");
            int $medDet = ((size($input) / 2));
            float $medDet2 = ($input[$medDet]);
            return ($medDet2);
      }
}


float $ListOfNum[] = {1,2,3,4,5,6,7};
$ListOfNum = `sort $ListOfNum`;


print (add ($ListOfNum) + "\n");
print (subtract ($ListOfNum)+ "\n");
print (multiple ($ListOfNum)+ "\n");
print (powerOf ($ListOfNum)+ "\n");
print (mean ($ListOfNum)+ "\n");
print (median ($ListOfNum)+ "\n");

